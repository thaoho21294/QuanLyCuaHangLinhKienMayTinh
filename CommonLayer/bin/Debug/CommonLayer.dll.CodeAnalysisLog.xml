<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="c:\program files (x86)\microsoft visual studio 14.0\team tools\static analysis tools\fxcop\Xml\CodeAnalysisReport.xsl"?>
<FxCopReport Version="14.0">
 <Targets>
  <Target Name="F:\HK_7\SE108.G11-Kiểm chứng phần mềm\QuanLyCuaHangLinhKienMayTinh\CommonLayer\bin\Debug\CommonLayer.dll">
   <Modules>
    <Module Name="commonlayer.dll">
     <Namespaces>
      <Namespace Name="CommonLayer">
       <Types>
        <Type Name="CommonFunction" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#SortByColumnDate(System.Data.DataTable,System.Int32,System.String,System.Int32)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-12-31 07:01:27Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="F:\HK_7\SE108.G11-Kiểm chứng phần mềm\QuanLyCuaHangLinhKienMayTinh\CommonLayer" File="CommonFunction.cs" Line="155">'CommonFunction.SortByColumnDate(DataTable, int, string, int)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#SortByColumnDate(System.Data.DataTable,System.Int32,System.String,System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-12-31 07:01:27Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="F:\HK_7\SE108.G11-Kiểm chứng phần mềm\QuanLyCuaHangLinhKienMayTinh\CommonLayer" File="CommonFunction.cs" Line="192">'CommonFunction.SortByColumnDate(DataTable, int, string, string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
        <Type Name="SqlQuery" Kind="Class" Accessibility="Public" ExternallyVisible="True">
         <Members>
          <Member Name="#readProcedure(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-12-31 07:01:27Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="F:\HK_7\SE108.G11-Kiểm chứng phần mềm\QuanLyCuaHangLinhKienMayTinh\CommonLayer" File="SqlQuery.cs" Line="80">'SqlQuery.readProcedure(string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#readProcedure(System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-12-31 07:01:27Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="F:\HK_7\SE108.G11-Kiểm chứng phần mềm\QuanLyCuaHangLinhKienMayTinh\CommonLayer" File="SqlQuery.cs" Line="97">'SqlQuery.readProcedure(string, SqlParameter[])' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#readSQL(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-12-31 07:01:27Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="F:\HK_7\SE108.G11-Kiểm chứng phần mềm\QuanLyCuaHangLinhKienMayTinh\CommonLayer" File="SqlQuery.cs" Line="22">'SqlQuery.readSQL(string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#readSQL(System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-12-31 07:01:27Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="F:\HK_7\SE108.G11-Kiểm chứng phần mềm\QuanLyCuaHangLinhKienMayTinh\CommonLayer" File="SqlQuery.cs" Line="34">'SqlQuery.readSQL(string, SqlParameter[])' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#writeSQL(System.String)" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-12-31 07:01:27Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="F:\HK_7\SE108.G11-Kiểm chứng phần mềm\QuanLyCuaHangLinhKienMayTinh\CommonLayer" File="SqlQuery.cs" Line="51">'SqlQuery.writeSQL(string)' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
          <Member Name="#writeSQL(System.String,System.Data.SqlClient.SqlParameter[])" Kind="Method" Static="True" Accessibility="Public" ExternallyVisible="True">
           <Messages>
            <Message TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200" Status="Active" Created="2015-12-31 07:01:27Z" FixCategory="NonBreaking">
             <Issue Certainty="95" Level="Error" Path="F:\HK_7\SE108.G11-Kiểm chứng phần mềm\QuanLyCuaHangLinhKienMayTinh\CommonLayer" File="SqlQuery.cs" Line="68">'SqlQuery.writeSQL(string, SqlParameter[])' rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Issue>
            </Message>
           </Messages>
          </Member>
         </Members>
        </Type>
       </Types>
      </Namespace>
     </Namespaces>
    </Module>
   </Modules>
  </Target>
 </Targets>
 <Rules>
  <Rule TypeName="RethrowToPreserveStackDetails" Category="Microsoft.Usage" CheckId="CA2200">
   <Name>Rethrow to preserve stack details</Name>
   <Description>Use the IL rethrow instruction to preserve original stack details when re-raising a caught exception.</Description>
   <Resolution Name="Default">{0} rethrows a caught exception and specifies it explicitly as an argument. Use 'throw' without an argument instead, in order to preserve the stack location where the exception was initially raised.</Resolution>
   <Owner />
   <Url>http://msdn.microsoft.com/library/ms182363.aspx</Url>
   <Email>[none]</Email>
   <MessageLevel Certainty="95">Error</MessageLevel>
   <File Name="usagerules.dll" Version="14.0.0.0" />
  </Rule>
 </Rules>
 <Localized>
  <String Key="Category">Category</String>
  <String Key="Certainty">Certainty</String>
  <String Key="CollapseAll">Collapse All</String>
  <String Key="CheckId">Check Id</String>
  <String Key="Error">Error</String>
  <String Key="Errors">error(s)</String>
  <String Key="ExpandAll">Expand All</String>
  <String Key="Help">Help</String>
  <String Key="Line">Line</String>
  <String Key="Messages">message(s)</String>
  <String Key="LocationNotStoredInPdb">[Location not stored in Pdb]</String>
  <String Key="Project">Project</String>
  <String Key="Resolution">Resolution</String>
  <String Key="Rule">Rule</String>
  <String Key="RuleFile">Rule File</String>
  <String Key="RuleDescription">Rule Description</String>
  <String Key="Source">Source</String>
  <String Key="Status">Status</String>
  <String Key="Target">Target</String>
  <String Key="Warning">Warning</String>
  <String Key="Warnings">warning(s)</String>
  <String Key="ReportTitle">Code Analysis Report</String>
 </Localized>
</FxCopReport>
